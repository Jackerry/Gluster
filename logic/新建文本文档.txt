	//将起始ip到结束ip都显示
	if(isset($_SESSION['start_ip'])){$st=$_SESSION['start_ip'];}else $st='192.168.150.10';
	if(isset($_SESSION['end_ip'])){$et=$_SESSION['end_ip'];}else $et='192.168.150.210';
	$st_t=explode('.',$st,4); 	//起始ip分离
	$et_t=explode('.',$et,4); 	//结束ip分离
	$ip_3=$st_t[0].".".$st_t[1].".".$st_t[2].".";  //ip前3位
	for($i=$st_t[3]; $i<$et_t[3]; $i++)	//显示每一位ip
	{
		update_ip_list($ip_3.$i,"unknown");
	}





	//获取 手动编辑 界面的ip，并存入ip_list列表中
	if(isset($_GET['edit_ip_1'])){
		$edit = $_GET['edit_ip_1'];		
		$_SESSION['edit_ip'] = $edit;
		update_ip_list($edit,"unknown");
	}




















<?php
	include '../logic/start.php';
	
	//用于edit_ip手动编辑ip，放入ip_list中。
	if(isset($_SESSION['edit_ip_new'])&&$_SESSION['edit_ip_new']=="true"){
		echo "aa";
		//从edit_ip.xml文件中，读取ip和状态，并放入ip_list列表中	
		$xml = simplexml_load_file("edit_ip.xml");
		$host = $xml->host;
		for ($i=0; $i<count($host); $i++){
			$addr = (string)$host[$i]->address->attributes()->addr;
			$state = (string)$host[$i]->status->attributes()->state;
			update_ip_list($addr,$state);
		}
		
	}else{
		echo "bb";
		//从myscan.xml文件中，读取ip和状态，并放入ip_list列表中		
		$xml = simplexml_load_file("myscan.xml");
		$host = $xml->host;
		for ($i=0; $i<count($host); $i++){
			$addr = (string)$host[$i]->address->attributes()->addr;
			$state = (string)$host[$i]->status->attributes()->state;
			update_ip_list($addr,$state);
		}
	}	
		//从myscan.xml文件中，读取ip和状态，并使输出为json格式，可以被logic/setting_pools.php中，自动探测 的onclick函数所接收，然后在 网内主机列表 输出相应的信息
		/*echo '[';
		if(0<count($host)){
			$addr = $host[0]->address->attributes()->addr;
			$state = $host[0]->status->attributes()->state;
			echo '{"ip":"'.$addr.'","state":"'.$state.'"}';
		}
		for ($i=1; $i<count($host); $i++){
			$addr = $host[$i]->address->attributes()->addr;
			$state = $host[$i]->status->attributes()->state;
			echo ',{"ip":"'.$addr.'","state":"'.$state.'"}';
		}
		echo ']';*/
		
		$array=$_SESSION['ip_list'];
		echo '[';
		if(0<count($array)){
			$addr = $array[0][0];
			$state = $array[0][1];
			echo '{"ip":"'.$addr.'","state":"'.$state.'"}';
		}
		for ($i=1; $i<count($array); $i++){
			$addr = $array[$i][0];
			$state = $array[$i][1];
			echo ',{"ip":"'.$addr.'","state":"'.$state.'"}';
		}
		echo ']';	

?>






jquery.min.js，jquery-form.js






<?php if(isset($_SESSION['ip_list']))echo count($_SESSION['ip_list']);else echo "0";?>
















<?php
$file = fopen("test.txt","r");

//执行一些代码

fclose($file);
?>


检测文件末尾（EOF）
if (feof($file)) echo "文件结尾";


逐行读取文件
注释：在调用该函数之后，文件指针会移动到下一行。
下面的实例逐行读取文件，直到文件末尾为止：
<?php
$file = fopen("welcome.txt", "r") or exit("无法打开文件!");
// 读取文件每一行，直到文件结尾
while(!feof($file))
{
    echo fgets($file). "<br>";
}
fclose($file);
?>




